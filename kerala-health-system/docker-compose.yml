version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kerala-health-postgres
    environment:
      POSTGRES_DB: kerala_health
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - kerala-health-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kerala-health-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kerala-health-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: kerala-health-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - kerala-health-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kerala-health-backend
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/kerala_health
      REDIS_URL: redis://redis:6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      JWT_SECRET: dev-jwt-secret-change-in-production
      ENCRYPTION_KEY: dev-encryption-key-32-chars-long
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - kerala-health-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kerala-health-frontend
    environment:
      REACT_APP_API_URL: http://localhost:4000/api/v1
      REACT_APP_ENVIRONMENT: development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - kerala-health-network

  # Database Admin (Adminer)
  adminer:
    image: adminer:latest
    container_name: kerala-health-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - kerala-health-network

  # Optional: Kafka for Analytics
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: kerala-health-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kerala-health-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kerala-health-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kerala-health-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  kerala-health-network:
    driver: bridge