apiVersion: v1
kind: ConfigMap
metadata:
  name: kerala-health-config
  namespace: kerala-health
data:
  # Database Configuration
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "kerala_health"
  
  # Redis Configuration
  REDIS_URL: "redis://redis-service:6379"
  
  # MinIO Configuration
  MINIO_ENDPOINT: "minio-service"
  MINIO_PORT: "9000"
  MINIO_BUCKET: "kerala-health-attachments"
  MINIO_USE_SSL: "false"
  
  # Application Configuration
  NODE_ENV: "production"
  PORT: "4000"
  
  # ABHA Configuration (Mock)
  ABHA_BASE_URL: "https://dev.abdm.gov.in"
  
  # Government APIs
  IDSP_API_ENDPOINT: "https://idsp.mohfw.gov.in/api"
  
  # Analytics Configuration
  ENABLE_ANALYTICS: "true"
  ALERT_THRESHOLD: "10"
  
  # Audit Configuration
  AUDIT_ENABLED: "true"
  BLOCKCHAIN_ENABLED: "false"
  
  # Frontend Configuration
  FRONTEND_URL: "https://kerala-health.gov.in"
  ADMIN_FRONTEND_URL: "https://kerala-health.gov.in/admin"
  
  # File Upload Configuration
  MAX_FILE_SIZE: "10MB"
  ALLOWED_FILE_TYPES: "pdf,jpg,jpeg,png,doc,docx"
  
  # QR Configuration
  QR_EXPIRY_DAYS: "730" # 2 years
  
  # Supported Languages
  SUPPORTED_LANGUAGES: "en,hi,ml"
  DEFAULT_LANGUAGE: "ml"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: kerala-health
data:
  POSTGRES_DB: "kerala_health"
  POSTGRES_USER: "postgres"
  PGDATA: "/var/lib/postgresql/data/pgdata"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: kerala-health
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
        
        upstream backend {
            server backend-service:4000;
        }
        
        server {
            listen 80;
            server_name kerala-health.gov.in;
            return 301 https://$server_name$request_uri;
        }
        
        server {
            listen 443 ssl http2;
            server_name kerala-health.gov.in;
            
            # SSL configuration
            ssl_certificate /etc/ssl/certs/tls.crt;
            ssl_certificate_key /etc/ssl/private/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
            ssl_prefer_server_ciphers off;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            
            # Frontend static files
            location / {
                root /usr/share/nginx/html;
                try_files $uri $uri/ /index.html;
                
                # Cache static assets
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }
            }
            
            # API proxy
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
            
            # Auth endpoints with stricter rate limiting
            location /api/v1/auth/ {
                limit_req zone=auth burst=5 nodelay;
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }